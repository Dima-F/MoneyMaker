<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHx8AAAAACACECAAAFgAAACgAAAAfAAAAPgAAAAEACAAAAAAA4AMAAAAAAAAAAAAAAAEAAAAB
        AAALFBsAAhcbABYSBwAFHiUACBInAAsWJQALFyoACR4lAAgbIQAHESgACywyAAY7PQAUICIAGS0tAB0p
        OAAjHAwALCcbACEtPAAlLjEAODMjAAwkRwASO0gAHDBRAA45YQAUOmsALj9MADU+RAAiOWwAA09QAA5C
        TgAOZXUANUhaADhRVAAwS08AKVZ+AEAwFQBwGgkAaykXAHI3EABsJCIAWEMZAHBMFQBqSyUASkxJAEJI
        UgBKVFkAVEtLAEBZYABRam8AY2pqAG10eQB2d3kAe3BvABddpAACfYUAFn+dAC5DgwAjTpEAOX2tAB5s
        ywAeaecAH2j0ACNVwQAjWsIAKV3KADRe0QAqacoAM2TTADJr1AA3dsIAI2byAChm8wAuafQAK2nyACVo
        9AAudOUAJHP2AC109QAuefcAPWbgADJq8wA8afQAOnTlADh75gA1dvAAMnT1ADJ88wA6c/EAO3z0AFlP
        kQBFZ/AARXfsAER19gBEevUAVnvrAGZ0ygAPiZsAAZ+hABKLqwAblb0AEqe2ACafuQAXl9cAFprYAAW2
        wwAfvN4AJoP6ACyC+QAsjvsALpH9ACuT/QAmkv0APoDsADWB9QAxhPgAPI75ADiG9gAxlv0AMpP7ADuY
        /QAzm/4AIbrHACOi6QAivu8AKLn2AAbN1wAOzegACNrqAA/d+AAP2vEAGcryABnM8wAYzfQAHMvxABPW
        9gAW0fQAFtL0ABXV9QAXzvMAEtr2ABHd9wAV2vMAHtbxABvT8QAd2vEABur8AAXu/AAN4vkADOb4AA3l
        +AAL5foACun6AAjt+gAN6/gAD+f3AAPx/QAB8v4ABPH8AAX0/AAK8foAA/j9ABHl9wAR3/cAGODyADnK
        0QAvwuoAKcftACTE9AAg3PwAMcPpACvg1AB4kZkAeYWJAEGG+ABGl/kAToH1AEmj+wBJpf0AR7f8AFCq
        +gBStPsAX8icAFLLuQBryaEAQczKAJ58NQCjdiMAhXh3AKVifAC0bWYA+lwdAPhLGADiTDAA7Xk5APNq
        KgCZY44AkWKYALyGJQCwk0YAvolgAKnKZADQnDUA+IwsAPidNgDsrjcA7LYzAPetNADzszUA97Y3AMGM
        VgDNqkQAzrpdAMWrZAD1tUkA7rlSAO3FNwDr1TsA59k+APXGOQDy1DsA6+Q9AM/BTQDzx0gA8sZWAO3T
        QgDq4kEAiImKAIiNkACRhoQAk4uHAJOUkwCZm5wAkpCOAJ+goQCpqqsAs7S0AIvIgwC+wMAAzc3NAMXF
        xgDOz88A09TUANnZ2QDe3t4A4uLiAObm5gDp6ekA7e3tAOvs7ADy8vIA9fX1APn5+QD7+/sA/Pz8AP//
        /wD+/v4AAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgACAgICAgICAgICAgICAgIC6zESAAED
        AwEMK+YCAgICAAICAgICAgICAgICAgIC7S0LNmh+ioOJgX1hHA3nAgIAAgICAgIC9PPx7vP0+OsgNn+e
        koCJg4mNl6CfZAroAgACAgLu4y0RBgkJBg4sGh5/kp6XgImKiYmNlqGQZQwCAAIC4g4XNTs8RkZLQjkY
        YpaenpKAiYOJjZeglY+pB+4AAjMUO29uakxHSFVTRD9nlp6ekoCJg4mNlp6XkKUH7gACAEJsdnZyVUhQ
        V1JBPmaWnp6SgIqDiY2Xl42PqQfuAO4FVnZub2pMSkhVU0Q/Z5aenpKAiYOJjZael5ClB+4A7gVxbG5u
        ck1IUFdSQz9nlp6el4CJg4mNlpehkKkH7gDuBVZ2dm5qTEdIVVNEPmaWnp6SgImDiY2XnpePqQfuAO4F
        cWxubmtNSFBXUkM/ZpaenpeAiYOJjZaXlZCpB+4A7gVWdnZuakxGSFVTQz5mlp6ekoCJg4mAl56hj6kH
        7gDuBXFsdm5rTUhQVVJDPmeWnp6SgImDiY2Wl5WQpQfuAO4FVnZ2bnJOTVVYUkM+ZpaenpKAiYmJjZaX
        oY+pB+4A7gVxdnh3c61dXF1bT0Bnlp6ekpaNiY2NlpeXkKUH7gDuBXR3sK6urXFXUVpaT3qXnpKSl5aN
        iYqJiYmPpQfuAO4FsLN3dm5qTD1HVa2up56enp6SlomDg4mNjYOlA+4AAgW0sG9vakw9Rk1zsLKooJ6e
        kpaJg4OJlp6fg3sD7gACEjqwcmpMPUZNc7CzrnyXlpeWiYODiZaenqOnYwwCAALpGSJFcFdRUVyvr15f
        q7Wqo4+Dg42NlaGPaTcV4gIAAgLrMh8WGzhZxMO8vdHS3cjst7a4pHlkYB4dL+cCAgACAgIC7+riLifA
        wsHKzNfZ2ODd09THLiEwrOruAgICAAICAgICAgK7JL++wsrP2uDg2s/Oy8ElNO4CAgICAgIAAgICAgIC
        AuQlvsrLz8/e3t/e39/VwSXkAgICAgICAgACAgICAgIC5CbLzs/Pz9fY4eHb3t/WKuQCAgICAgICAAIC
        AgICAgLlKc7Oz8/X2Nzc29rP1d8q6AICAgICAgIAAgICAgICAusjxc/M19jc3Nvaz8/WxhPrAgICAgIC
        AgACAgICAgICAuYTKLrJzc3Pz8zJuSgT5gICAgICAgICAAICAgICAgICAvPlKw8CDw8PAhAr6PMCAgIC
        AgICAgIAAgICAgICAgICAgICAvTx7vH0AgICAgICAgICAgICAgD////+//8AHv/8AAb8AAAC4AAAAsAA
        AACAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAAgAAAAoAA
        AALAAAAG8AAADv4AAH7+AAD+/gAA/v4AAP7+AAD+/wAB/v+AA/7/+D/+
</value>
  </data>
</root>